; ARG1 - var name
; ARG2 - max index
[SLEEPYHEAD_CLEAR_ARRAY]
exten => s,1,NoOp(--- ${STRFTIME(${EPOCH},%Y-%m-%d %H:%M:%S)}, CONTEXT: ${CONTEXT} ---)

exten => s,n,Set(SCA_ITERATOR=1)
exten => s,n,ExecIf($[!${EXISTS(${SCA_ITERATOR})}]?Set(SCA_ITERATOR=1))

exten => s,n,While($[${SCA_ITERATOR} <= ${ARG2}])
exten => s,n,Set(${ARG1}[${SCA_ITERATOR}]=)
exten => s,n,Set(SCA_ITERATOR=${INC(SCA_ITERATOR)})
exten => s,n,EndWhile()

exten => s,n,Return()

; -------------------------------------------
; ARG1 - apps
; -------------------------------------------
[VM_EXEC_APPS]
exten => s,1,NoOp(----- ${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} CONTEXT: ${CONTEXT} PARAM: ${MSISDN} ${CALL_ID} ${SHORT_NUM} ${LANG} ${${ARG1}} -----)
exten => s,n,ExecIf($["${${ARG1}}" != ""]?${${ARG1}}:Hangup(${HANGUP_CAUSE}))
exten => s,n,Set(ITERATOR=0)
exten => s,n,While($["${app[${ITERATOR}]}" != ""])
exten => s,n,Exec(${app[${ITERATOR}]})
exten => s,n,Set(app[${ITERATOR}]=)
exten => s,n,Set(ITERATOR=${MATH(${ITERATOR} + 1,i)})
exten => s,n,EndWhile()
exten => s,n,Return()

exten => h,1,Return(${EXTEN})